import java.util.*;

class Solution {
    public static boolean[] Visited;
    
    public int solution(int n, int[][] computers) {
        Visited = new boolean[n];
        int answer = 0;
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (!Visited[i]) {
                    answer++;
                    bfs(i, computers);
                }
            }
        }
        
        return answer;
    }
    
    public static void bfs(int row, int[][] computers) {
        Queue<Integer> queue = new LinkedList<>();
        queue.add(row);
        
        while(!queue.isEmpty()) {
            int current = queue.poll();
            
            for(int i = 0; i < Visited.length; i++) {
                if (!Visited[i] && computers[current][i] == 1 && row != i) {
                    queue.add(i);
                }
            }
            
            Visited[current] = true;
        }
    }
}
