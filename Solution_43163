import java.util.*;

class Solution {
    public static int answer = Integer.MAX_VALUE;
    public static boolean[] Visited;
    
    public int solution(String begin, String target, String[] words) {
        Visited = new boolean[words.length];
        
        dfs(0, begin, target, words);
        
        if(answer == Integer.MAX_VALUE)
            answer = 0;
        
        return answer;
    }
    
    public static void dfs(int cnt, String begin, String target, String[] words) {
        if (begin.equals(target)) {
            answer = Math.min(cnt, answer);
            
            return;
        }
        
        if (cnt > answer)
            return;
        
        for (int i = 0; i < words.length; i++) {
            if (!Visited[i]) {
                int s = 0;
            
                for (int j = 0; j < begin.length(); j++) {
                    if(begin.charAt(j) == words[i].charAt(j))
                        s++;
                }
            
                if (s + 1 == begin.length()) {
                    Visited[i] = true;
                    dfs(cnt + 1, words[i], target, words);
                    Visited[i] = false;
                }
            }            
        }
    }
}
